@model Result
@{ Layout = null; }
<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Routing</title>
    <link rel="stylesheet" asp-href-include="lib/twitter-bootstrap/css/*.min.css" />
</head>
<body class="m-1 p-1">
    <table class="table table-bordered table-striped table-sm">
        <tr><th>Controller:</th><td>@Model.Controller</td></tr>
        <tr><th>Action:</th><td>@Model.Action</td></tr>
        @foreach (string key in Model.Data.Keys)
        {
            <tr><th>@key:</th><td>@Model.Data[key]</td></tr>
        }
    </table>

    <p>
        <a asp-controller="Home"
           asp-action="CustomVariable"
           asp-route-id="mon"
           asp-route-routeVar="routeVar">Generating relative outgoing URLs example</a>
    </p>
    <p>
        <a asp-controller="Home"
           asp-action="CustomVariable"
           asp-route-id="tue"
           asp-route-routeVar="routeVar"
           asp-protocol="http"
           asp-host="localhost:55386"
           asp-fragment="myFragment">Generating full outgoing URLs example</a>
    </p>
    <p>
        <a asp-action="CustomVariable"
           asp-route-id="wed"
           asp-route-routeVar="routeVar">
            Routing system can reuse incoming URL when generating an outgiong URL (in the example<br />
            asp-controller is omitted and the controller of the outgoing URL will be same as in<br />
            incoming URL)
        </a>
    </p>
    <p>Generating URL as string: @Url.Action("CustomVariable", "Home", new { id = "thu", routeVar = "routeVar" })</p>

    <p>
        <a asp-route-legacyUrl="/articles/Windows_3.1_Overview.html">
            Outgoing URL which is handled by CustomRouter
        </a>
    </p>
    <p>
        Outgoing URL which is handled by CustomRouter (string):
        @Url.Action(null, null, new { legacyUrl = "/old/.NET_1.0_Class_Library" })
    </p>
    <p>
        Outgoing URL which is NOT handled by CustomRouter (string):
        @Url.Action(null, null, new { legacyUrl = "/notHandled/old/.NET_1.0_Class_Library" })
    </p>
    <p>
        <a asp-action="Index" asp-controller="Home" asp-route-area="Admin">Outgoing URL to the another area</a>
    </p>
    <p>
        Outgoing URL to the another area (string):
        @Url.Action("AttributeRoute", "Home", new { area = "Admin" })
    </p>

</body>
</html>